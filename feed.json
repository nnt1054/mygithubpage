[{"title":"Recurrence Relations","permalink":"https://sparanoid.com/recurrence-relations.html","link":"https://sparanoid.com/recurrence-relations.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Recurrence Relations\nMathematically reducing the runtime of a function/algorithm/process through recursively solving subproblems of the original problem.\n\nMaster Theorem\nMaster Theorem:\n\nT(n) = aT(n/b) + O(nd)\n\nT(n) E O(nd)         if d &gt; log_b(a)\nT(n) E O(nlog_b(a))  if d &lt; log_b(a)\nT(n) E O(ndlog(n)    if d = log_b(a)\n\nIf an equation does not fit the Master Theorem, you must expand the recurrence and find patterns yourself.\n\nSolving Recurrence Relations\n\n  Check if the problem fits the Master Theorem\n  If not, unravel the relation until you’re able to find a pattern.\n  Find a value for the variable, k, such that The input to T(n) is constant.  This is the base case.\n  Plug in the value of k, and the solution is whichever remaining term is larger and dominates the run time.\n\n\nDivide and Conquering\nExtending from recurrence relations, a problem can be solved more efficiently by solving smaller parts of a larger problem and somehow combining the results.\n\n  Common problems require picking a “pivot” at which to divide elements of a problem at each step.\n  Think about how to discard elements you no longer need at each step.\n\n","excerpt":"Recurrence Relations\nMathematically reducing the runtime of a function/algorithm/process through recursively solving subproblems of the original problem.\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Primality Testing","permalink":"https://sparanoid.com/primality-testing.html","link":"https://sparanoid.com/primality-testing.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Fermat’s Little Theorem\nGiven a prime number, p, for any integer a:\n\nap = a (mod p)\nap-1 = 1 (mod p)\n\nMiller-Rabin primality test\nGiven a number p, p is prime if and only if either:\n\nad = 1 (mod p)\n\na2r*d = -1 (mod p)\n\nis true for any a.\n","excerpt":"Fermat’s Little Theorem\nGiven a prime number, p, for any integer a:\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Max Flow","permalink":"https://sparanoid.com/max-flow.html","link":"https://sparanoid.com/max-flow.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Max Flow\nGiven a directed graph with edge capacity constraints, send as many units of “flow” from the source s to the the sink t.\nIn order to find the max flow, keep sending units of flow through the shortest available path from s to t using BFS.\n\nMin Cut\nThe minimum cut is the dual of max cut.  The minimum cut of a graph is a partition of a graph into two disjoint subsets that are joined together by at least one edge.\n\nUsing Max Flow to Solve Problems\n\n  For “at most k” constraints, create edges leaving with capacity k.\n  If constraint A belongs to only one constraint B, add edge of capacity 1.\n  Add edge between constraints that satisfy each other.\n\n","excerpt":"Max Flow\nGiven a directed graph with edge capacity constraints, send as many units of “flow” from the source s to the the sink t.\nIn order to find the max flow, keep sending units of flow through the shortest available path from s to t using BFS.\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Linear Programming","permalink":"https://sparanoid.com/linear-programming.html","link":"https://sparanoid.com/linear-programming.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T10:32:39-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Linear Programming\nLinear programming is a method of framing an optimization problem using a set of linear constraints and an objecive function to optimize.  LP’s are then generally solved using the simplex algorithm.\n\nDefinitions\n\n  Feasible Region: the points that don’t violate any constraints\n  Infeasible LP: an LP in which the feasible region is empty\n  Unbounded LP: an LP in which the constraints allow for the objective function to grow arbitrarily large or arbitrarily small.\n\n\nWriting Linear Programs\n\n  List the objective\n  Decide what variables required\n  Rewrite objective with defined variables\n  Encode constraints from new objective\n\n\nNotes\n\n  Linear constraints can not be inclusive and must be inclusive.\n  Remember variables should represent quantities that can vary when creating your constraints\n\n","excerpt":"Linear Programming\nLinear programming is a method of framing an optimization problem using a set of linear constraints and an objecive function to optimize.  LP’s are then generally solved using the simplex algorithm.\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Greedy Algorithms","permalink":"https://sparanoid.com/greedy-algorithms.html","link":"https://sparanoid.com/greedy-algorithms.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T09:37:04-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Greedy Algorithms\nA greedy algorithm is one that optimizes its solution by picking the best option step by step.  Examples include Kruskal’s which continues to find the next lighest edge and Huffman that always merges the two lowest frequencies.\n\nSwap Argument:  The easiest way to prove the solution to a greedy algorithm is an optimal solution is through the swap argument.  The consists of “swapping” two elements in an ordering and proving that the new ordering isn’t optimal.  It follows that swapping any of the other items in the solution will always create a non-optimal solution, making the current one the optimal.\n\nForming Greedy Algorithms\n\n  List down relevant factors to optimize\n  Combine ideas into a single metric\n\n\nGeneral Ideas\n\n  First to Completion is most of the time optimal\n  Scheduling events at last available slots maximizes time to schedule other events\n\n","excerpt":"Greedy Algorithms\nA greedy algorithm is one that optimizes its solution by picking the best option step by step.  Examples include Kruskal’s which continues to find the next lighest edge and Huffman that always merges the two lowest frequencies.\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Graph Traversals and Paths","permalink":"https://sparanoid.com/graphs.html","link":"https://sparanoid.com/graphs.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T10:54:50-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Definitions:\n\n  SPT: Shortest Spanning Tree\n  DAG: Directed Acyclic Graph\n  SCC: Strongly Connected Component\n  Topological Sort: An ordering of verticies such that for every edge(u,v), u comes before v in the ordering.\n    \n      Can sort by decreasing post-visit numbers\n    \n  \n  Bellman-Ford: computes shortest path from a source vertex and can handle negatively weighted edges.\n    \n      Update every edge andif the distance to the destination can be shortened by taking the edge, the distance is updated to the new lower value\n    \n  \n  DFS: Depth First Search\n  BFS: Breadth First Search\n\n\nDijkstra’s algorithm\nDijkstra’s algorithm is used to find the shortest path between nodes in a graph.  Dijkstra’s works by calculating the tentative distances from the initial node for all nodes until we arrive at the target node.  For every node, we visit each of its neighbors and set the distance for them to the minimum between its current distance (if its distance has been set) and the sum between the current node’s distance and the edge weight between the two.\n","excerpt":"Definitions:\n\n  SPT: Shortest Spanning Tree\n  DAG: Directed Acyclic Graph\n  SCC: Strongly Connected Component\n  Topological Sort: An ordering of verticies such that for every edge(u,v), u comes before v in the ordering.\n    \n      Can sort by decreasing post-visit numbers\n    \n  \n  Bellman-Ford: computes shortest path from a source vertex and can handle negatively weighted edges.\n    \n      Update every edge andif the distance to the destination can be shortened by taking the edge, the distance is updated to the new lower value\n    \n  \n  DFS: Depth First Search\n  BFS: Breadth First Search\n\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Dynamic Programming","permalink":"https://sparanoid.com/dyanmic-programming.html","link":"https://sparanoid.com/dyanmic-programming.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T10:11:39-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Dynamic Programming\nAs opposed to greedy algorithms, dynamic programming aims to solve problems in a more systematic and incremental manner by defining a subproblem, a recurrence relation, and base cases.\n\nSubproblems\nSubproblems are meant to represent a single component of the entire problem, so it is key that these are defined well.  Subproblems are most used to define what the optimal solution is for only its given component of the problem.\n\nRecurrence Relation\nThe recurrence relation shows exactly how each subproblem relates to each other, and how we’re able to deterimine the values for other subproblems.  For example, a subproblem, F(x) could equal F(x) = max(F(x-1), F(x-2))\n\nBase Case\nThe base cases are the inputs to the subproblem that could be easily solved.\n\nStrategies for Creating DP Solutions\n\n  List down metrics/info needed to know at any point in time\n  Subproblems must have a repetitive structure where the solution for one subproblem must provide information for another.\n  Include one paramter for every degree of freedom in the problem\n  Recurrence relation should consider all possible options that directly lead to it.\n  Ensure there exists an acceptable base case such that not every case is a base case.  Define and precompute one if necessary.\n\n","excerpt":"Dynamic Programming\nAs opposed to greedy algorithms, dynamic programming aims to solve problems in a more systematic and incremental manner by defining a subproblem, a recurrence relation, and base cases.\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Duality and Zero Sum Games","permalink":"https://sparanoid.com/duality.html","link":"https://sparanoid.com/duality.html","date":"2017-12-15T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Duality\nDuality is the phenomenon where for any primal LP, there exists a dual LP that are both optimal for the same question.  The main idea is for any max LP, we can create a min LP that returns an upper bound for the primal question by introducing a set of non-negative multipliers.\n\n\nHow to find the Dual LP\n\n  Multiply each constraint by a multiplier, yi\n  Combine constraints into one inequality\n  Factor out the original xi variables\n  Use primal objective to write new dual and nonnegativity constraints\n\n\nZero Sum Games:\n\nThe concept of duality can be applied and seen through zero sum games between a row and column player’s strategy.\n\nGoal: Develop a strategy to maximize your own score while minimizing your opponents, using an immediate payoff matrix and assumming both players play optimally.\n\n\n  \n    \n       \n      0\n      1\n    \n  \n  \n    \n      0\n      A\n      B\n    \n    \n      1\n      C\n      D\n    \n  \n\n\nSolving with Linear Programming:\n\n\n  Let xi denote the probability that the row player plays strategy i and yj denote the probability the the column player plays strategy j.\n  If the column player uses strategy j0, then the row player’s payoff will be Ax0 + Cx1\n  If the column player uses strategy j1, then the row player’s payoff will be Bx0 + Dx1\n  So the column player’s optimal strategy becomes: min(Ax0 + Cx1, Bx0 + Dx1)\n  As a result, the row player’s optimal strategy also becomes max(min(Ax0 + Cx1, Bx0 + Dx1))\n\n\nLinear Program Solution for Row Player:\n\n\n  max P\n    \n      p &lt;= Ax0 + Cx1\n      p &lt;= Bx0 + Dx1\n      xi &gt;= 0\n    \n  \n  x0 + x1 = 1\n\n\nThe LP for the Row Player and the LP for the Column Player are Dual to each other despite which player announces their strategy first.\n","excerpt":"Duality\nDuality is the phenomenon where for any primal LP, there exists a dual LP that are both optimal for the same question.  The main idea is for any max LP, we can create a min LP that returns an upper bound for the primal question by introducing a set of non-negative multipliers.\n\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Approximation Algorithms","permalink":"https://sparanoid.com/approximation-algorithms.html","link":"https://sparanoid.com/approximation-algorithms.html","date":"2017-12-14T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Approximation Ratio\nGiven an instance I, and its approximation solution A(I), its approximation ratio is:\n\n  For Max Problems:\n    \n      minI(A(I) / OPT(I)) &lt;= 1\n    \n  \n  For Min Problems:\n    \n      maxI(A(I) / OPT(I)) &gt;= 1\nnote: figure out how to format mathematical equations later\n    \n  \n\n\nGeneral Approximation Strategy\nFor minimization problems, try to:\n\n  Solve a different problem that can be used as a relaxed lower bound for the optimal solution.\n  Turn the infeasible solution into a feasible one by increasing its approximation ratio.\n\n\nThe goal is to try and show that the Infeasible(Lower Bound) &lt; OPT &lt; k&ast;Infeasible(or Approximation) &lt; k&ast;Lower Bound\n\nNotes\n\n  For minimization problems, we want the approximation ratio to be as low as possible.\n  Approximations are not preserved through reductions since other problems have different approximation metrics.\n\n\nGeneral Strategies for Solving Problems\n\n  List out different strategies you can try\n  If a + b = c, where c is the optimal solution, either a or b will be at least 0.5&ast;c\n  For DAG and graph problems, try rearranging vertices in a straight line.\n\n","excerpt":"Approximation Ratio\nGiven an instance I, and its approximation solution A(I), its approximation ratio is:\n\n  For Max Problems:\n    \n      minI(A(I) / OPT(I)) &lt;= 1\n    \n  \n  For Min Problems:\n    \n      maxI(A(I) / OPT(I)) &gt;= 1\nnote: figure out how to format mathematical equations later\n    \n  \n\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Algorithm Complexity","permalink":"https://sparanoid.com/reduction-and-complexity.html","link":"https://sparanoid.com/reduction-and-complexity.html","date":"2017-12-13T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Reductions:\n\n  A –&gt; B means reducing an algorithm A to an algorithm B\n  Reducing an algorithm A to B creates an instance f(I) from the original instance, I, that can then be used with the algorithm B.  The solution S can then be used to get h(S) which is the solution for A.\n  If an algorithm A can be reduced to another algorithm B, that means B is at least as hard as A.\n\n\n\nDefinitions:\n\n  P: The set of all problems that can be verified and solved in polynomial time.\n  NP: The set of all problems that can be verified in polynomial time.\n  NP-Hard: The set of all problems that are at least as hard as the hardest questions in NP\n    \n      This means that a problem is NP-Hard iff every problem in NP can be reduced to it in polynomial time.\n    \n  \n  NP-Complete: The subset of NP-Hard problems that can be verified in polynomial time.\n  What does the N in NP mean? It means non-deterministic because these problems can only be solved in a non-deterministic polynomial time.\n  Verifiable: A solution to an algorithm can be verified as a correct solution to the problem in polynomial time.\n\n\nHow to show NP-Completeness:\n\n  To show a problem is in NP:\n    \n      Verify the problem can be solved in polynomial time\n    \n  \n  To show a problem is NP-Hard:\n    \n      Reduce an NP-Hard or NP-Complete problem to the problem\n    \n  \n  To prove a problem is NP-Complete, show a solution can be verified in polynomial time.\n\n\nList of Common NP-Hard Problems\n\n  3-Dimensional Matching\n  3SAT\n  Rudrata Cycle/Path\n    \n      Given a graph, find a cycle/path that visits every vertex once\n    \n  \n  Maximum Independent Set\n    \n      Add verticies with or without edges to adjust\n    \n  \n  Longest Path\n  Knapsack\n  Balanced Cut\n\n\nList of Common Algorithms for Verification\n\n  Strongly Connected Components: O(V+E)\n\n\nGraph Definitions:\n\n  Strongly Connected Graph: Every vertex is reachable from every other vertex.\n  Independent Set: There are no edges between any vertex of the set.\n\n","excerpt":"Reductions:\n\n  A –&gt; B means reducing an algorithm A to an algorithm B\n  Reducing an algorithm A to B creates an instance f(I) from the original instance, I, that can then be used with the algorithm B.  The solution S can then be used to get h(S) which is the solution for A.\n  If an algorithm A can be reduced to another algorithm B, that means B is at least as hard as A.\n\n\n\n","languages":null,"categories":["notes"],"tags":["deployment","cs170"]},{"title":"Running Steam on a Chromebook","permalink":"https://sparanoid.com/steam-games-on-chromeos.html","link":"https://sparanoid.com/steam-games-on-chromeos.html","date":"2017-10-31T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Setting Up:\n\nI installed another chroot on my Samsung Chromebook Pro using:\n\nsudo sh ~/Downloads/crouton -t xfce4 -n xenial2\n\n\n\nI wanted to make this a seperate chroot from my main CLI only one since I’ll probably end up deleting this one later.  Once the new xfce4 was installed I started it up and installed steam.\n\nsudo startxfce4\nsudo apt-get install steam\n\n\n\nOnce steam was installed, I bought Hollow Knight and Polybridge while it was still on sale and installed Hollow Knight.  There were no issues with the installation suprisingly.\n\nPerformance:\n\nAfter launching Hollow Knight, I made it to the loading screen perfectly fine.  There was however a very noticeable input lag, so I had to actually reduce the resolution from 2400x1600 all the way to 480p.  The input lag was no longer an issue for any resolutions under 720p.  At 480p, I was able to max the framerates at 60fps and was the most part playable.  However, the frames were too unstable and would stutter too often for comfort, especially for certain areas in the game.  Using the Chromebook Pro for faster paced games like Hollow Knight, it IS playable but only to a certain degree.\n\nI’ll be trying out Polybridge next time, but as far as I can tell, I’m almost certain the Chromebook Pro will be able to hold up for more slower paced games.\n","excerpt":"Setting Up:\n\n","languages":null,"categories":["blog_post"],"tags":["deployment"]},{"title":"Notes Introduction","permalink":"https://sparanoid.com/notes-introducton.html","link":"https://sparanoid.com/notes-introducton.html","date":"2017-10-30T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Welcome!\n\nHey, thanks for checking out my blog!  In this Notes section, I’ll be compiling and posting notes from my classes and studies (in a hopefully organized fashion).  The main purpose of this website is to help myself consolidate a stronger understanding and grasp of the larger ideas of my course content by forcing myself to review and summarize what I’ve learned.\n\nI’m not too experienced with Markdown yet, so hopefully these posts will get better over time.\n","excerpt":"Welcome!\n\n","languages":null,"categories":["notes"],"tags":["deployment"]},{"title":"Blog Introduction","permalink":"https://sparanoid.com/blog-introduction.html","link":"https://sparanoid.com/blog-introduction.html","date":"2017-10-30T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Welcome!\n\nHey!  Here I’ll be writing less about technical matters, and more actually blogging about how and what I did during my day. :)\n","excerpt":"Welcome!\n\n","languages":null,"categories":["blog_post"],"tags":["deployment"]},{"title":"Upgrading Guide: v1.1.0","permalink":"https://sparanoid.com/upgrading-guide-v1.1.0.html","link":"https://sparanoid.com/upgrading-guide-v1.1.0.html","date":"2017-01-07T00:00:00-08:00","modified":"2017-01-10T19:17:09-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"There’re some significant changes in update v1.1.0, action required after you upgrade Almace Scaffolding.\n\nIn your front-matter fields:\n\n\n  Replace all svg-headline, img-headline with heading-img.\n  Replace all svg-headline-width, img-headline-width with heading-img-width.\n  Remove all svg-headline-height, img-headline-height as they’re deprecated and no longer available.\n  Add heading-img-local: true if images are stored right inside your project.\n\n\nCheck the following front-matter data for post thumbnails:\n\n\n  Replace all thumb with thumbnail.\n  Add thumb/ prefix to your filename, ie. thumbnail: thumb/my-post.png.\n  Add thumbnail-local: true if thumbnails are stored right inside your project.\n\n","excerpt":"There’re some significant changes in update v1.1.0, action required after you upgrade Almace Scaffolding.\n\n","languages":null,"categories":["news"],"tags":[]},{"title":"Open Graph","permalink":"https://sparanoid.com/open-graph.html","link":"https://sparanoid.com/open-graph.html","date":"2017-01-06T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Theme Curtana has full Open Graph and Twitter Cards support.\n\nIt will look for the image in the following order:\n\n\n  Use page.thumbnail if defined in your post front-matter field.\n  If no specified page.thumbnail defined, it uses Heading Background Image (aka. page.heading-bg) if defined in your post front-matter field.\n  If no heading background image found, Curtana will try to grab the first image (wrapped inside &lt;img&gt;) in your post as your post thumbnail\n  If nothing found, it fails back to logo.png located at your site root.\n\n\nYou can always use page.thumb_force_logo in your post front-matter field to override the above lookup.\n\nHere’s a preview on Twitter:\n\n\n","excerpt":"Theme Curtana has full Open Graph and Twitter Cards support.\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"Jekyll Theme Compatibility","permalink":"https://sparanoid.com/jekyll-theme-compatibility.html","link":"https://sparanoid.com/jekyll-theme-compatibility.html","date":"2016-11-07T00:00:00-08:00","modified":"2017-01-05T02:59:05-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"With recent release of Jekyll, it gets the built-in ability to support themes, since we’ve already added theme support in 2015, the original config variables theme would be conflicted with the built-in one.\n\nTo solve this issue, I’ve rename our theme option to amsf_theme. And here’s what you need to do to resovle compatibility issues after upgrading to latest Almace Scaffolding:\n\n\n  Rename your original theme option in _amsf.yml to amsf_theme.\n  Add amsf_theme_url with your theme Git URL.\n  Replace all site.theme with site.amsf_theme in your page templates.\n\n","excerpt":"With recent release of Jekyll, it gets the built-in ability to support themes, since we’ve already added theme support in 2015, the original config variables theme would be conflicted with the built-in one.\n\n","languages":null,"categories":["news"],"tags":[]},{"title":"Introducing Curtana","permalink":"https://sparanoid.com/theme-curtana.html","link":"https://sparanoid.com/theme-curtana.html","date":"2016-06-01T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Curtana is the default theme of AMSF (Almace Scaffolding).\n\nFeatures\n\n\n  A variant of sparanoid.com, looking great on any modern browsers\n  Minimalism design, No jQuery, no everybody-shake-ur-body.js\n  Ideal for personal blog, portfolio, product blog and Tumblr-like link blog\n  (Maybe) the first template that uses viewport relative units\n  Handcrafted stylesheets. No Bootstrap or other bloated frameworks are used, unminified CSS &lt; 12 KB\n  Predefined Less variables make it easier to change color schemes for posts\n  Dynamic color scheme for code highlighters powered by Randomized\n  Open Graph and Twitter Cards support\n  No Internet Explorer support\n\n","excerpt":"Curtana is the default theme of AMSF (Almace Scaffolding).\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"Deployment Methods","permalink":"https://sparanoid.com/deployment-methods.html","link":"https://sparanoid.com/deployment-methods.html","date":"2016-03-18T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Sites generated using Almace Scaffolding can be deployed in nearly any web hosting services. A few of the most common deployment techniques are described below. More deployment methods please refer to Jekyll - Deployment methods.\n\nWeb Hosting Providers (FTP/SFTP)\n\nJust about any traditional web hosting provider will let you upload files to their servers over FTP. You can simply run the grunt build command and upload all files generated under _site to the HTTP root folder of your hosting account.\n\nrsync\n\nThere’s a _deploy.yml at the root of your AMSF project containing a basic rsync configurations. Change these configurations to yours and then run:\n\n$ grunt deploy:rsync\n\n\n\nYou can deploy it for specific environment, the following command will deploy your site to beta environment via rsync method you defined in _deploy.yml:\n\n$ grunt deploy:rsync --env=beta\n\n\n\nAmazon S3 (s3_website)\n\nYou can also deploy your site to Amazon S3 via s3_website, see s3_website.example.yml for more info.\n","excerpt":"Sites generated using Almace Scaffolding can be deployed in nearly any web hosting services. A few of the most common deployment techniques are described below. More deployment methods please refer to Jekyll - Deployment methods.\n\n","languages":null,"categories":["note"],"tags":["deployment"]},{"title":"Multiple Themes Support","permalink":"https://sparanoid.com/multiple-themes-support.html","link":"https://sparanoid.com/multiple-themes-support.html","date":"2015-08-18T00:00:00-07:00","modified":"2017-01-20T01:00:20-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"From version 0.0.31, you can now use multiple themes in Almace Scaffolding. See Themes for more information.\n","excerpt":"From version 0.0.31, you can now use multiple themes in Almace Scaffolding. See Themes for more information.\n","languages":null,"categories":["news"],"tags":[]},{"title":"Welcome","permalink":"https://sparanoid.com/welcome.html","link":"https://sparanoid.com/welcome.html","date":"2014-06-13T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"AMSF, a.k.a. Almace Scaffolding, is a super-fast Jekyll framework, supports live reloading (Browsersync), Less, HTML minification, inlined stylesheets and more.\n\n\n  Getting Started &#x27A1;&#xfe0e;\n\n\nGo to the GitHub page for downloads, bug reports, and feature requests.\n\nFeatures\n\n\n  Theme switching, you can switch themes with just one command\n  A basic, fully configured Jekyll setup with well-defined Atom feed and sitemap\n  Almace Scaffolding ships a sleek responsive theme Curtana, a variant of sparanoid.com, looking great on any modern browsers\n  Every minified page generates only one HTTP request 1\n  Tons of configurable settings for your posts and site customization\n  Service Worker support for lightning fast experience\n  Built with Grunt.js for easy development\n  Travis support\n\n\n\n  \n    \n      Based on the theme you’re using, theme Curtana generates only one HTTP request for production build when your posts don’t have fancy sliders or other external media files. &#8617;&#xfe0e;\n    \n  \n\n","excerpt":"AMSF, a.k.a. Almace Scaffolding, is a super-fast Jekyll framework, supports live reloading (Browsersync), Less, HTML minification, inlined stylesheets and more.\n\n","languages":null,"categories":["note"],"tags":["getting-started"]},{"title":"Getting Started","permalink":"https://sparanoid.com/getting-started.html","link":"https://sparanoid.com/getting-started.html","date":"2014-06-12T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Requirements\n\nAlmace Scaffolding has exactly the same requirements as Jekyll. For more info please refer to Installation - Jekyll.\n\nQuick Start\n\n\n  Fork or clone the repo.\n  Install dependencies with Ruby gem bundler and Node.js package manager npm.\n  Run grunt init to initialize your project.\n  Run grunt serve to fire up a local server.\n\n\nSo in short for geeks:\n\n$ git clone git@github.com:sparanoid/almace-scaffolding.git\n$ bundle install &amp;&amp; npm install\n$ grunt init\n$ grunt serve\n\n\n\nDownload\n\nGo to the GitHub repository for downloads, bug reports, and feature requests.\n\nTransfer from Jekyll\n\nYou can simply copy all posts from your old Jekyll setup into _app/_posts, you can also transfer your custom pages into _app/_pages/.\n\nUpgrading\n\nIt will be easy if you’re a casual blogger and keep every core and template file untouched. You can use the following command to update Almace Scaffolding core files:\n\n$ grunt amsf-update\n\n\n\nIt checks the latest Almace Scaffolding build from GitHub and update core files automatically. Please keep in mind that if you changed some of the AMSF core files this action will override the changes you made. So it’s recommended to keep your project under version control, you will be always be able to compare changes for Almace Scaffolding.\n\nUsing Beta Release\n\nBy default, when you run amsf-update you will get updated files from release branch. However, I’m continuously working on Almace Scaffolding, so there may have testing branches you can try and give me feedback if you’re interested. You can check the AMSF GitHub repository for available branches, and it’s very easy to switch:\n\n$ grunt amsf-update --branch=feat/service-worker\n\n\n\nThe branch master is the one which is always available to checkout and also has the latest changes:\n\n$ grunt amsf-update --branch=master\n\n\n\nIf you messed up with the testing branch, don’t worry, you can just run a normal update to revert them back:\n\n$ grunt amsf-update\n\n\n","excerpt":"Requirements\n\n","languages":null,"categories":["note"],"tags":["getting-started"]},{"title":"Customizing Styles","permalink":"https://sparanoid.com/customizing-styles.html","link":"https://sparanoid.com/customizing-styles.html","date":"2014-06-11T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"You can customize the basic look and feel without touching the theme files by changing user.js and user.less:\n\n├── _app/\n|   ├── assets/\n|   |   └── _js/\n|   |   |   └── user.js\n|   |   └── _less/\n|   |   |   └── user.less\n|   |   └── themes/\n|   |   |   └── ...\n\n\n\nThese files won’t be overwritten when you update Almace Scaffolding or update your themes.\n","excerpt":"You can customize the basic look and feel without touching the theme files by changing user.js and user.less:\n\n","languages":null,"categories":["note"],"tags":["customization"]},{"title":"Configuration","permalink":"https://sparanoid.com/configuration.html","link":"https://sparanoid.com/configuration.html","date":"2014-06-11T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Configuration Settings\n\n\n  All AMSF built-in settings can be configured at _config.yml.\n  Theme specific variables can be found at ./_app/_data/theme-name.yml.\n  Additional variables are stored in ./_app/_data/ directory. They can be accessed by Jekyll. (More info)\n  You should also change favicon.* and apple-touch-icon.png to yours.\n  logo.png is mainly used by Open Graph and Twitter Cards when there’s no featured image in a post, you should also design your own.\n  More customization please refer to theme specific documentation\n\n\nTips\n\n\n  Not familiar with Markdown? Try Markdown Cheatsheet.\n  You can use Jekyll’s built-in syntax highlighting, I’ve included a default theme for this project.\n  Tables and footnotes are also available to use.\n\n","excerpt":"Configuration Settings\n\n","languages":null,"categories":["note"],"tags":["getting-started"]},{"title":"Themes","permalink":"https://sparanoid.com/themes.html","link":"https://sparanoid.com/themes.html","date":"2014-06-10T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Overview\n\nIn the latest build, I’ve added multiple themes support, finally, you can switch themes with just one command.\n\nThis is an experimental feature and may change until the feature stabilizes.\n\nInstalling Themes\n\nThe AMSF framework ships a default theme Curtana. You can also install as many themes as you like and switch to the one you prefer in any time.\n\nVia Git (GitHub)\n\nThe easiest way to install new theme is via theme-add, the following command will install theme Curtana from its official repo amsf/amsf-curtana:\n\n$ grunt theme-add --theme=curtana\n\n\n\nIf you’d install custom theme from other users, append --user in your command, the following command will install a new theme named bootstrap-sass from sparanoid/amsf-bootstrap-sass\n\n$ grunt theme-add --theme=bootstrap-sass --user=sparanoid\n\n\n\nManually Install\n\nYou can also install themes manually. find an AMSF theme (Curtana, for example), download the package and uncompress all files to .amsf-cache/themes directory, the file structure should look like:\n\n├── .amsf-cache/ (Almace Scaffolding cache directory)\n|   ├── themes/\n|   |   └── curtana/\n|   |   |   └── assets/\n|   |   |   └── includes/\n|   |   |   └── layouts/\n|   |   |   └── pages/\n|   |   |   └── config.yml\n└── _app/\n\n\n\nThen execute the following command:\n\n$ grunt activate --theme=curtana\n\n\n\nYou current theme will be backed up to .amsf-cache/themes/your-old-theme/ and the new theme curtana will be installed to the appropriate directories.\n\nUpgrading Themes\n\nYou can update your current activated theme by the following command. The activated theme will be downloaded from GitHub automatically if there’s any update:\n\n$ grunt theme-update\n\n\n\nPlease note that only themes added via GitHub can be updated.\n","excerpt":"Overview\n\n","languages":null,"categories":["note"],"tags":["customization"]},{"title":"Creating Your Own Theme","permalink":"https://sparanoid.com/creating-themes.html","link":"https://sparanoid.com/creating-themes.html","date":"2014-06-09T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Overview\n\nYou can create your own theme in AMSF, theme files are located in the following location (I use default theme Curtana here for better understanding):\n\n├── _app/\n|   ├── _data/\n|   |   └── curtana.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── example-page.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _less/\n|   |   |   |   └── ...\n\n\n\nThe theme specific config curtana.yml should have the same filename as your theme name. It should contain theme specific variables and can also override AMSF built-in settings.\n\nMore info about theme structure you can check out my default theme Curtana.\n\nYou can also have multiple themes in your project, as many as you like. For example if you also have themes Bootstrap and Ghost installed, the file structure should be:\n\n├── _app/\n|   ├── _data/\n|   |   └── bootstrap.yml\n|   |   └── curtana.yml\n|   |   └── ghost.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── ghost/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-blog.md\n|   |   |   |   └── example-fluid-container.md\n|   |   |   |   └── ...\n|   |   |   └── curtana/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-news.md\n|   |   |   |   └── ...\n|   |   |   └── ghost/\n|   |   |   |   └── example-archive.md\n|   |   |   |   └── example-page.md\n|   |   |   |   └── example-tagcloud.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── _coffee/\n|   |   |   |   └── _less/\n|   |   |   |   └── images/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _less/\n|   |   |   |   └── svg/\n|   |   |   └── ghost/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── fonts/\n...\n\n\n\nAMSF Options\n\nThere’re several built-in options you can use in your theme. These options can also be overridden in theme specific config.\n\nsite.name\n\nTemplate:\n\n&lt;footer class=\"footer\"&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"/\"&gt;{{ site.name }}&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"/atom.xml\"&gt;Atom&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/footer&gt;\n\n\n\nOutput:\n\n&lt;footer class=\"footer\"&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"/\"&gt;Almace Scaffolding&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"/atom.xml\"&gt;Atom&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/footer&gt;\n\n\n\nsite.description\n\nSite description, will appear in the document meta and Atom feed subtitle.\n\nTemplate:\n\n&lt;meta property=\"og:description\" content=\"{{ site.description }}\"&gt;\n\n\n\nOutput:\n\n&lt;meta property=\"og:description\" content=\"Super-fast Jekyll framework\"&gt;\n\n\n\nsite.file\n\nMedia assets URL used in posts, without trailing slash. In the most cases this URL should be powered by a CDN provider.\n\nConfig:\n\nfile: //d349cztnlupsuf.cloudfront.net\n\n\n\nTemplate:\n\n&lt;img src=\"{{ site.file }}/post-thumbnail.jpg\"&gt;\n\n\n\nOutput:\n\n&lt;img src=\"//d349cztnlupsuf.cloudfront.net/post-thumbnail.jpg\"&gt;\n\n\n\nsite.twitter\n\nSite Twitter account handle.\n\nTemplate:\n\n&lt;a href=\"https://twitter.com/{{ site.twitter }}\"&gt;Follow @{{ site.twitter }} on Twitter&lt;/a&gt;\n\n\n\nOutput:\n\n&lt;a href=\"https://twitter.com/sparanoid\"&gt;Follow @sparanoid on Twitter&lt;/a&gt;\n\n\n\nsite.force_utf_8\n\nForce UTF-8 encoding, enable this will simply add &lt;meta charset=\"utf-8\"&gt; to the head of your pages.\n\nTemplate:\n\n{% if site.force_utf_8 %}\n  &lt;meta charset=\"utf-8\"&gt;\n{% endif %}\n\n\n\nsite.robots\n\nYou can define your own records in robots.txt.\n\nConfig:\n\nrobots:\n  - \"User-agent: *\"\n  - \"Disallow: /ajax/\"\n  - \"Disallow: /@async\"\n  - \"Disallow: /log/\"\n\n\n\nTheme Features\n\nThere’re some features can be integrated into your theme.\n\n(Basic) Multi-Language Support\n\nYou can define post / page language in your front-matter field:\n\nlanguages:\n  - zh-tw\n\n\n\nAn additional lang HTML attribute will be added to your final rendering:\n\n&lt;article lang=\"zh-tw\"&gt;\n  ...\n&lt;/article&gt;\n\n\n\nIf your post / page content is multilingual, you can also define multiple languages in array:\n\nlanguages:\n  - zh-tw\n  - en-us\n\n\n\nPlease note that only the first item defined in languages array will be used in final lang output, the additional languages will be available in JSON feed output:\n\n{\n  \"languages\": [\"zh-tw\", \"en-us\"],\n  \"categories\": [\"note\"],\n  \"tags\": [\"miscellaneous\"]\n}\n\n\n\nSmooshing Assets\n\nFor better performance, Almace Scaffolding will find all the CSS, script links and images in compiled HTML, and outputs a version with all the CSS, scripts and images (Base64) written inline. Sounds cool? but it needs theme support. Here’s how:\n\nYou can simply add the query string ?assets-inline at the end of the file you’d like to be inlined in production site:\n\n&lt;!-- This CSS will be inlined into HTML --&gt;\n&lt;link rel=\"stylesheet\" href=\"{{ '/css/app.css?assets-inline' | prepend: amsf_theme_assets }}\"&gt;\n\n&lt;!-- This script will be inlined into HTML --&gt;\n&lt;script src=\"{{ '/js/app.js?assets-inline' | prepend: amsf_theme_assets }}\"&gt;&lt;/script&gt;\n\n\n\nUser Custom Styles Support\n\nDefine the following code snippet into your theme styles (Less) will allow users to custom your theme without touching the theme files:\n\n// Import user custom styles\n@import \"../../../_less/custom\";\n\n\n\nUser Custom Scripts Support\n\nDefine the following code snippet into your theme template (it’s recommended to put it in footer) will allow users to add custom scripts without touching the theme files:\n\n&lt;!-- User custom scripts --&gt;\n&lt;script src=\"{{ '/js/user.js?assets-inline' | prepend: amsf_user_assets }}\"&gt;&lt;/script&gt;\n\n\n\nPage / Post Specific CSS Block Support\n\nThis allow your user to define page / post specific CSS blocks in front-matter data:\n\n&lt;!-- Page-wide custom CSS --&gt;\n{{ amsf_page_css }}\n\n\n\nGoogle Analytics Support\n\nThis allow your user to be able to use Google Analytics for their site, tracking ID can be changed in config file:\n\n&lt;!-- Google Analytics tracking code --&gt;\n{{ amsf_google_analytics }}\n\n\n\nPost Published Time\n\nThis allow you to get the published time of current post.\n\nTemplate:\n\n&lt;meta property=\"article:published_time\" content=\"{{ amsf_page_pubdate | date_to_xmlschema }}\"&gt;\n\n\n\nOutput:\n\n&lt;meta property=\"article:published_time\" content=\"2014-01-01T00:00:00+08:00\"&gt;\n\n\n\nPost Modified Time\n\nThis allow you to get the modified time of current post.\n\nTemplate:\n\n&lt;meta property=\"article:modified_time\" content=\"{{ amsf_page_update | date_to_xmlschema }}\"&gt;\n\n\n\nOutput:\n\n&lt;meta property=\"article:modified_time\" content=\"2014-01-03T03:17:49+08:00\"&gt;\n\n\n\nPost Reading Time\n\nThis allow you to show average reading time of current post.\n\nTemplate:\n\nReading time: {{ amsf_page_reading_time | strip }}\n\n\n\nOutput:\n\n# Less than 200 words\nReading time: Less than 1 min\n\n# Around 200 words\nReading time: 1 min\n\n# More than 200 words\nReading time: 34 mins\n\n# More than 1 hour\nReading time: 1 hr\nReading time: 1 hr 1 min\nReading time: 3 hrs 20 mins\n\n\n\nPublishing Themes\n\nYou really like your custom design and wanna show it off to the world? Cool, you can create (pack) you own theme by the following command:\n\n$ grunt theme-save\n\n\n\nThe activated theme will be saved to AMSF cache (.amsf-cache/) with correct file and directory structure, then you can upload your theme to GitHub.\n\nStill confusing? see my default theme Curtana for reference.\n","excerpt":"Overview\n\n","languages":null,"categories":["note"],"tags":["customization"]},{"title":"Syntax Highlighting","permalink":"https://sparanoid.com/syntax-highlighting.html","link":"https://sparanoid.com/syntax-highlighting.html","date":"2014-06-06T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Code highlighting demo, powered by Rouge. More info about code highlighting can be found at Jekyll’s documentation.\n\n.code-text (@link, @text) when (lightness(@link) &gt;= 50%) and (lightness(@link) &lt; lightness(@text)) {\n  @return-color: lighten(@text, 20%);\n  @return-value: 30%;\n}\n\n\n\ndef show\n  @widget = Widget(params[:id])\n  respond_to do |format|\n    format.html # show.html.erb\n    format.json { render json: @widget }\n  end\nend\n\n\n\necho \"Hello, world!\";\n\n\n\ndef print_hi(name)\n  puts \"Hi, #{name}\"\nend\nprint_hi('Tom')\n#=&gt; prints 'Hi, Tom' to STDOUT.\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Title!&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1 id=\"title\" class=\"heading\"&gt;Example&lt;/h1&gt;\n    &lt;p id=\"foo\"&gt;Hello, World!&lt;/p&gt;\n    &lt;script type=\"text/javascript\"&gt;var a = 1;&lt;/script&gt;\n    &lt;style type=\"text/css\"&gt;#foo { font-weight: bold; }&lt;/style&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n// Load the http module to create an http server.\nvar http = require('http');\n\n// Configure our HTTP server to respond with Hello World to all requests.\nvar server = http.createServer(function (request, response) {\n  response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n  response.end(\"Hello World\\n\");\n});\n\n// Listen on port 8000, IP defaults to 127.0.0.1\nserver.listen(8000);\n\n// Put a friendly message on the terminal\nconsole.log(\"Server running at http://127.0.0.1:8000/\");\n\n\n\n.code-text (@link, @text) when (lightness(@link) &gt;= 50%) and (lightness(@link) &lt; lightness(@text)) {\n  @return-color: lighten(@text, 20%);\n  @return-value: 30%;\n}\n\n\n\n&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Title!&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1 id=\"title\" class=\"heading\"&gt;Example&lt;/h1&gt;\n    &lt;p id=\"foo\"&gt;Hello, World!&lt;/p&gt;\n    &lt;script type=\"text/javascript\"&gt;var a = 1;&lt;/script&gt;\n    &lt;style type=\"text/css\"&gt;#foo { font-weight: bold; }&lt;/style&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n\n; copied from http://llvm.org/docs/LangRef.html#module-structure\n; Declare the string constant as a global constant.\n@.str = private unnamed_addr constant [13 x i8] c\"hello world\\0A\\00\"\n\n; External declaration of the puts function\ndeclare i32 @puts(i8* nocapture) nounwind\n\n; Definition of main function\ndefine i32 @main() {   ; i32()*\n  ; Convert [13 x i8]* to i8  *...\n  %cast210 = getelementptr [13 x i8]* @.str, i64 0, i64 0\n\n  ; Call puts function to write out the string to stdout.\n  call i32 @puts(i8* %cast210)\n  ret i32 0\n}\n\n; Named metadata\n!1 = metadata !{i32 42}\n!foo = !{!1, null}\n\n\n\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;xsl:template match=\"/\"&gt;&lt;/xsl:template&gt;\n\n\n\nutil = require \"my.module\"\n\na_table = {\n  foo: 'bar'\n  interpolated: \"foo-#{other.stuff 2 + 3}\"\n  \"string\": 2\n  do: 'keyword'\n}\n\nclass MyClass extends SomeClass\n  new: (@init, arg2 = 'default') =&gt;\n    @derived = @init + 2\n    super!\n\n  other: =&gt;\n    @foo + 2\n\n\n\nAddDefaultCharset UTF-8\n\nRewriteEngine On\n\n# Serve gzipped version if available and accepted\nAddEncoding x-gzip .gz\nRewriteCond %{HTTP:Accept-Encoding} gzip\nRewriteCond %{REQUEST_FILENAME}.gz -f\nRewriteRule ^(.*)$ $1.gz [QSA,L]\n&lt;FilesMatch \\.css\\.gz$&gt;\n  ForceType text/css\n  Header append Vary Accept-Encoding\n&lt;/FilesMatch&gt;\n&lt;FilesMatch \\.js\\.gz$&gt;\n  ForceType application/javascript\n  Header append Vary Accept-Encoding\n&lt;/FilesMatch&gt;\n&lt;FilesMatch \\.html\\.gz$&gt;\n  ForceType text/html\n  Header append Vary Accept-Encoding\n&lt;/FilesMatch&gt;\n\n\n\ndiff(plus(A,B), X, plus(DA, DB))\n   &lt;= diff(A, X, DA) and diff(B, X, DB).\n\ndiff(times(A,B), X, plus(times(A, DB), times(DA, B)))\n   &lt;= diff(A, X, DA) and diff(B, X, DB).\n\nequal(X, X).\ndiff(X, X, 1).\ndiff(Y, X, 0) &lt;= not equal(Y, X).\n\n\n\n(* Binary tree with leaves car­rying an integer. *)\ntype tree = Leaf of int | Node of tree * tree\n\nlet rec exists_leaf test tree =\n  match tree with\n  | Leaf v -&gt; test v\n  | Node (left, right) -&gt;\n      exists_leaf test left\n      || exists_leaf test right\n\nlet has_even_leaf tree =\n  exists_leaf (fun n -&gt; n mod 2 = 0) tree\n\n\n\nSELECT * FROM `users` WHERE `user`.`id` = 1\n\n\n\nquadMultiply: i1 and: i2\n    \"This method multiplies the given numbers by each other\n    and the result by 4.\"\n    | mul |\n    mul := i1 * i2.\n    ^mul * 4\n\n\n\n#lang racket\n\n;; draw a graph of cos and deriv^3(cos)\n(require plot)\n(define ((deriv f) x)\n  (/ (- (f x) (f (- x 0.001))) 0.001))\n(define (thrice f) (lambda (x) (f (f (f x)))))\n(plot (list (function ((thrice deriv) sin) -5 5)\n            (function cos -5 5 #:color 'blue)))\n\n;; Print the Greek alphabet\n(for ([i (in-range 25)])\n  (displayln\n   (integer-&gt;char\n    (+ i (char-&gt;integer #\\u3B1)))))\n\n;; An echo server\n(define listener (tcp-listen 12345))\n(let echo-server ()\n  (define-values (in out) (tcp-accept listener))\n  (thread (λ ()\n             (copy-port in out)\n             (close-output-port out)))\n  (echo-server))\n\n\n\nservice { 'ntp':\n  name      =&gt; $service_name,\n  ensure    =&gt; running,\n  enable    =&gt; true,\n  subscribe =&gt; File['ntp.conf'],\n}\n\n\n\nvoid main() {\n  var collection=[1,2,3,4,5];\n  for(var a in collection){\n    print(a);\n  }\n}\n\n\n\nproc cross_sum {s} {expr [join [split $s \"\"] +]}\n\n\n\n// reverse byte order (16-bit)\npublic static UInt16 ReverseBytes(UInt16 value)\n{\n  return (UInt16)((value &amp; 0xFFU) &lt;&lt; 8 | (value &amp; 0xFF00U) &gt;&gt; 8);\n}\n\n\n\nPrivate Sub Form_Load()\n    ' Execute a simple message box that says \"Hello, World!\"\n    MsgBox \"Hello, World!\"\nEnd Sub\n\n\n\ndef fib(n):    # write Fibonacci series up to n\n    \"\"\"Print a Fibonacci series up to n.\"\"\"\n    a, b = 0, 1\n    while a &lt; n:\n        print a,\n        a, b = b, a+b\n\n\n\n#!/usr/bin/env perl\nuse warnings;\nprint \"a: \";\nmy $a = \"foo\";\nprint $a;\n\n\n\nMarkdown has cool [reference links][ref 1]\nand [regular links too](http://example.com)\n\n[ref 1]: http://example.com\n\n\n\n- name: set PHP-FPM parameters\n  lineinfile:\n    dest: /etc/php-fpm.conf\n    regexp: \"^\"\n    insertafter: \"^;\"\n    line: \" = \"\n  with_items:\n    - { param: 'error_log', value: '/var/log/php-fpm/error.log' }\n    - { param: 'log_level', value: 'error' }\n    - { param: 'emergency_restart_threshold', value: '10' }\n\n\n","excerpt":"Code highlighting demo, powered by Rouge. More info about code highlighting can be found at Jekyll’s documentation.\n\n","languages":null,"categories":["note"],"tags":["miscellaneous"]},{"title":"Markdown Features Test","permalink":"https://sparanoid.com/markdown-features-test.html","link":"https://sparanoid.com/markdown-features-test.html","date":"2014-06-06T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Indented Code Blocks\n\ndef show\n  @widget = Widget(params[:id])\n  respond_to do |format|\n    format.html # show.html.erb\n    format.json { render json: @widget }\n  end\nend\n\n\n\nLiquid Tag with linenos Support\n\n1\n2\n3\n4\n5\n6\n7def show\n  @widget = Widget(params[:id])\n  respond_to do |format|\n    format.html # show.html.erb\n    format.json { render json: @widget }\n  end\nend\n\n\nGFM Code Blocks (fenced_code_blocks)\n\n/* Background color function */\n.code-bg (@v) when (lightness(@v) &gt;= 50%) {\n  @return-bg: mix(#000, lighten(@v, 30%), 10%);\n}\n.code-bg (@v) when (lightness(@v) &lt; 50%) {\n  @return-bg: mix(#fff, darken(@v, 10%), 70%);\n}\n\n\n\nSmartyPants\n\n“Aha! What’s up, man?” – Jony said.\n\nTables\n\n\n  \n    \n      Name\n      Upvotes\n      Downvotes\n      Abstentions\n    \n  \n  \n    \n      Alice\n      10\n      11\n      2\n    \n    \n      Bob\n      4\n      3\n      1\n    \n    \n      Charlie\n      7\n      9\n      4\n    \n    \n      Totals\n      21\n      23\n      7\n    \n  \n\n\nIntra-emphasis\n\nfoo_bar_baz\n\nAuto-link\n\nhttps://sparanoid.com/\n\nStrikethroughs\n\nThis is good bad.\n\nSpace after Headers\n\n###This is not a header.\n\nSuperscripts\n\nThis is the 2^(nd) time.\n\nFootnotes\n\nThis1 is2 a sentence3.\n\nID 日本語タイトル\n\nExpected id should be id-ri-ben-yu-taitoru.\n\nID 中文標題\n\nExpected id should be id-zhong-wen-biao-ti.\n\n\n  \n    \n      Lorem lean startup ipsum product market fit customer development acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying crowded market pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor. &#8617;&#xfe0e;\n    \n    \n      An Important Announcement by Richard Ziade at Readability &#8617;&#xfe0e;\n    \n    \n      Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties. &#8617;&#xfe0e;\n    \n  \n\n","excerpt":"Indented Code Blocks\n\n","languages":null,"categories":["note"],"tags":["miscellaneous"]},{"title":"Markup Example","permalink":"https://sparanoid.com/markup-example.html","link":"https://sparanoid.com/markup-example.html","date":"2014-06-05T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"Lorem lean startup ipsum product market fit customer development acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying crowded market pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.\n\n\n  Two days ago the Chinese website Taobao held a discount promotion to celebrate what’s known as “double sticks day” in China. In a single 24hr period, they conducted 19bn RMB (US$3.06bn) of business.\n  \n    Chris West\n  \n\n\n\n  Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\n\n\nGood afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties.\n\nInline HTML elements\n\nHTML defines a long list of available inline tags, a complete list of which can be found on the Mozilla Developer Network.\n\n\n  To bold text, use &lt;strong&gt;.\n  To italicize text, use &lt;em&gt;.\n  Abbreviations, like HTML should use &lt;abbr&gt;, with an optional title attribute for the full phrase.\n  Citations, like — Tunghsiao Liu &amp; Mark otto, should use &lt;cite&gt;.\n  Deleted text should use &lt;del&gt; and inserted text should use &lt;ins&gt;.\n  Superscript text uses &lt;sup&gt; and subscript text uses &lt;sub&gt;.\n\n\n\n\n\n  With the exception of Nietzsche, no other madman has contributed so much to human sanity as has Louis Althusser. He is mentioned twice in the Encyclopaedia Britannica as someone’s teacher. There could be no greater lapse: for two important decades (the 60s and the 70s), Althusser was at the eye of all the important cultural storms. He fathered quite a few of them.\n  This newly-found obscurity forces me to summarize his work before suggesting a few (minor) modifications to it.\n    \n      Society consists of practices: economic, political and ideological.\n        \n          Althusser defines a practice as:\n          “Any process of transformation of a determinate product, affected by a determinate human labour, using determinate means (of production)”\n            \n              The economic practice (the historically specific mode of production) transforms raw materials to finished products using human labour and other means of production, all organized within defined webs of inter-relations. The political practice does the same with social relations as the raw materials. Finally, ideology is the transformation of the way that a subject relates to his real life conditions of existence.\n                \n                  This is a rejection of the mechanistic worldview (replete with bases and superstructures). It is a rejection of the Marxist theorization of ideology. It is a rejection of the Hegelian fascist “social totality”. It is a dynamic, revealing, modern day model.\n                  “The objective internal reference … the system of questions commanding the answers given”\n                \n              \n              Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.\n                \n                  Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.\n                  What happens in a pluralistic environment rich in competing ideologies?\n                    \n                      Clarifying the HOW, though, does not shed light on the WHY.\n                        \n                          is the fact that in the new one, the second text is articulated with the lapses in the first text … (Marx measures) the problematic contained\n                        \n                      \n                    \n                  \n                \n              \n              Ideology is a practice with lived and material dimensions. It has costumes, rituals, behaviour patterns, ways of thinking. The State employs Ideological Apparatuses (ISAs) to reproduce ideology through practices and productions: (organized) religion, the education system, the family, (organized) politics, the media, the industries of culture.\n            \n          \n        \n      \n    \n  \n  These theoretical tools were widely used to analyze the Advertising and the film industries.\n\n\n\n  Ordered list\n  Ordered list\n    \n      Ordered list\n        \n          Ordered list\n          Ordered list\n            \n              Ordered list\n                \n                  Ordered list\n                  Ordered list\n                \n              \n              Ordered list\n                \n                  Ordered list\n                \n              \n              Ordered list\n            \n          \n        \n      \n      Ordered list\n        \n          Ordered list\n          Ordered list\n        \n      \n    \n  \n  Ordered list\n\n\n\n\n“This should be replaced.”\n\n“This should be replaced.”\n\nThis is a normal paragraph.\n\n‘This should be replaced.’\n\n‘This should be replaced.’\n\nThis is a normal paragraph.\n\n「This should be replaced.」\n\n「This should be replaced.」\n\nThis is a normal paragraph.\n\n『This should be replaced.』\n\n『This should be replaced.』\n\nThis is a normal paragraph.\n\n（This should be replaced.）\n\n（This should be replaced.）\n\nThis is a normal paragraph.\n\n\n\nMost of these elements are styled by browsers with few modifications on our part.\n\nMaui and his rough as guts piece of pounamu, what a stink buzz. Bro, quater-acre patches are really naff good with bung mates, aye. You have no idea how beached as our random kais were aye. Every time I see those beautiful lengths of number 8 wire it’s like Castle Hill all over again aye, do you happen to have a bucket or a hose bro?\n\nH2 Headings\n\nYou have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.\n\nH3 Headings\n\nYou have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.\n\nH4 Headings\n\nYou have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.\n\nH5 Headings\n\nYou have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.\n\nH6 Headings\n\nYou have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.\n\n\n\nHe was alone then; when he sat in that same chair his wife now sits in, and I shared with him the positive result to his HIV test. Though he seemed disinterested, vaguely detached, he had obviously heard of HIV before. His chart from the local clinic indicated a previous history of and treatment for anal gonorrhea, two acute cases of syphilis in the past three years, and a urinary tract infection last month. His only listed sexual contact, his wife. Who, strangely enough, only tested positive for one of the syphilis infections.\n\n“Mistake, this! I am married, not a giver of ass.”\n\nGiver of ass? That’s one for the archive, I think.\n\nUnwilling to engage his obvious denials, I ignore the comment and instead explain that due to a higher than acceptable potential of a false positive result, we won’t consider his oral test as confirmatory until the more accurate blood analysis is in.\n\n“I no understand”, he says to the room in general.\n\nHis annoyance is obvious. Abrasively, he offers me his exposed forearm. This, I assume, is my cue to draw his blood. Ignoring the indignant anger beginning to rise, I tighten my jaw, then swab the fat vein with betadine, working the cool, brown liquid off in concentric circles, using strong medicinal smelling alcohol. I use the betadine, as most of these men work in the mines, and dirt three layers thick on exposed skin is the norm. As the first tube in the vacationer fills with blood, he asks,\n\n“So how I get this thing?”\n\nAh, I see we are going to play the circuitous dance of ignorance. Sounding just a little too clinical, I begin the HIV 101 mantra.\n\n“Well, people acquire HIV through certain types of sex with an infected person, through sharing needles with an infected person, and sometimes through a blood transfusion. Have you ever had a blood transfusion, sir?”\n\nI take the dismissive wave of his hand as a no to the transfusion question. I don’t make a great attempt to navigate a comfort zone here; instinct and experience telling me he has already set the script of what is to follow.\n\n“She is fucking other cocks my whore devil wife”?\nBingo! A narrative that over the next six weeks I will hear from several other men as well.\n\n“These whores, all they want is the cock!”\nCareful Skippy, you really aren’t as convincing as you think you are.\n\n\n  \n    “She is fucking other cocks my whore devil wife”?\n    \n    Bingo! A narrative that over the next six weeks I will hear from several other men as well.\n  \n\n  \n    “These whores, all they want is the cock!”\n    \n    Careful Skippy, you really aren’t as convincing as you think you are.\n  \n\n  \n    from A World Away by alto\n  \n\n\nChinese Paragraph\n\n「名词成灾」的流行病里，灾情最严重的该是所谓「科学至上」（scientism）。在现代的工业社会里，科学早成显贵，科技更是骄子，所以知识分子的口头与笔下，有意无意，总爱用一些「学术化」的抽象名词，好显得客观而精确。有人称之为「伪术语」（pseudo-jargon）。例如：明明是 first step，却要说成 initial phase：明明是 letter，却要说成 communication，都属此类。\n\nJapanese Paragraph\n\n『雪国』の主な舞台は、上越国境の清水トンネルを抜けた湯沢温泉であるが、この作品も『伊豆の踊子』同様に、川端康成の旅の出会いから生まれたもので、雪中の火事も実際に起ったことだと川端は語っている。川端は作品内で故意に地名を隠しているが、1934 年（昭和 9 年）6 月 13 日より 1937 年まで新潟県湯沢町の高半旅館（現：高半ホテル）に逗留していたことを随筆『「雪国」の旅』で述べている。\n\n## H2 Heading\n### H3 Heading\n#### H4 Heading\n##### H5 Heading\n###### H6 Heading\n\n\n\nNewsletters Signup Form\n\n\n  \n\n","excerpt":"Lorem lean startup ipsum product market fit customer development acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying crowded market pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.\n\n","languages":null,"categories":["note"],"tags":["miscellaneous"]},{"title":"Custom HTML Markups","permalink":"https://sparanoid.com/custom-html-markups.html","link":"https://sparanoid.com/custom-html-markups.html","date":"2014-06-01T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":".note, .store, and .download\n\nA paragraph block with a thin border line.\n\nUsage\n\n[Download](download) it from GitHub\n{: .download}\n\nLove this plugin? please consider [buying me a cup of coffee](donate).\n{: .store}\n\n\n\nExample\n\nDownload it from GitHub\n\nLove this plugin? please consider buying me a cup of coffee.\n\n.largetype\n\nMake normal paragraph text large enough.\n\nUsage\n\n[PayPal](donate)\n{: .largetype}\n\n\n\nExample\n\nPayPal\n\n.browser\n\nA simple browser frame using pure CSS.\n\nUsage\n\n![Image](https://sparanoid.com/logo.png)\n{: .browser}\n\n\n\nExample\n\n\n\nLightense Images\n\nA simple library inspired by Tim Holman to view large images up close using simple mouse interaction, and the full screen.\n\nUsage\n\nAdd the following setting to your post front-matter field:\n\nplugin: lightense\n\n\n\nMarkdown markup:\n\n![Image](https://sparanoid.com/photo.jpg)\n\n\n\nLightense Images is activated globally by default, if you want to disable this effect for specific image, you can simply apply .no-lightense CSS class to your image or &lt;img&gt;:\n\n![Image](https://sparanoid.com/logo.png){: .no-lightense}\n\n\n\nPlease note that if you’re using HTML markup, you should wrap your images into a &lt;p&gt; container.\n\nExample\n\n\n\nImage Sizes\n\nThere’re different size helpers for images. They’re available using the following CSS classes:\n\nSmall Size\n\n![Image](https://sparanoid.com/logo.png){: .size-small}\n\n\n\n\n\nMedium Size\n\nMedium size is the default size of images, so you don’t need additional CSS class for it.\n\n![Image](https://sparanoid.com/logo.png)\n\n\n\n\n\nLarge Size\n\n![Image](https://sparanoid.com/logo.png){: .size-large}\n\n\n\n\n\nAligned Images\n\n![Image](https://sparanoid.com/logo.png){: .size-left}\n\n![Image](https://sparanoid.com/logo.png){: .size-right}\n\n\n\n\n\nAligned images are smaller images beside text, you can just apply .size-left or .size-right to your images and nothing special markup required. However that aligned images will be responded to normal large size for small desktops or mobile devices.\n","excerpt":".note, .store, and .download\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"Custom Color Scheme","permalink":"https://sparanoid.com/custom-color-scheme.html","link":"https://sparanoid.com/custom-color-scheme.html","date":"2014-05-01T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post front-matter field:\n\nscheme-text: \"#0029ff\"\nscheme-link: \"#ff00b4\"\nscheme-hover: \"#ff00b4\"\nscheme-code: \"#ad00ff\"\nscheme-bg: \"#00ebff\"\nscheme-hero-text: \"#00ebff\"\nscheme-hero-link: \"#00ebff\"\nscheme-hero-bg: \"#0029ff\"\n\n\n\nYou can also ignore other variables if you only want to change the background:\n\nscheme-bg: \"#00ebff\"\n\n\n","excerpt":"This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post front-matter field:\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"Unique Post Styling via Custom CSS","permalink":"https://sparanoid.com/custom-css.html","link":"https://sparanoid.com/custom-css.html","date":"2014-04-01T00:00:00-07:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"This is an example how to change your post styling via CSS. You can simply add the css option to your post front-matter field:\n\nscheme-text: \"#000\"\nscheme-link: \"#a73300\"\nscheme-hover: \"#ff4e00\"\nscheme-code: \"#a73300\"\ncss: |\n  body {\n    background-image: linear-gradient(to bottom, #fff500, #ff8f00);\n  }\n\n\n\nPlease note that syntax highligting may look ugly with custom background color.\n","excerpt":"This is an example how to change your post styling via CSS. You can simply add the css option to your post front-matter field:\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"External Link Post","permalink":"https://sparanoid.com/external-link-post.html","link":"https://sparanoid.com/external-link-post.html","date":"2014-02-01T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"This is an example of Tumblr-like external link post. You can simply add the following setting to your post front-matter field:\n\nlink: https://sparanoid.com/\n\n\n","excerpt":"This is an example of Tumblr-like external link post. You can simply add the following setting to your post front-matter field:\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"Custom Heading Image","permalink":"https://sparanoid.com/custom-heading-image.html","link":"https://sparanoid.com/custom-heading-image.html","date":"2014-02-01T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"This is an example of custom post heading image. You can simply add the following setting to your post front-matter field:\n\nheading-img: svg/heading-image.svg\nheading-img-local: true\nheading-img-width: 400\n\n\n\n\n  In Almace Scaffolding v1.1.0, the original svg-headline*, and img-headline* options are deprecated.\n\n\n\n  heading-img\n  Heading image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with site.file.\n  heading-img-local\n  To avoid relative URL prefixed by site.file, you can set this option to true to prefix it with amsf_user_assets, then you can store your images in _app/assets/.\n  heading-img-width\n  Set the width of your heading image. The value will be converted to viewport unit automatically. ie. heading-img-width: 400 will be converted to width: 40vw;\n\n\n\n  Pro Tips: Keep a &lt;title&gt; tag for your SVG can help Safari generate correct post title for its Reader mode:\n\n\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;\n&lt;title&gt;Cool Article&lt;/title&gt;\n…\n\n\n","excerpt":"This is an example of custom post heading image. You can simply add the following setting to your post front-matter field:\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"Custom Heading Background","permalink":"https://sparanoid.com/custom-heading-background.html","link":"https://sparanoid.com/custom-heading-background.html","date":"2014-02-01T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"This is an example of custom heading background. You can simply add the following setting to your post front-matter field:\n\nheading-bg: img/heading-background.jpg\nheading-bg-local: true\nheading-bg-color: \"#8141b1\"\nheading-bg-size: \"100px 100px\"\nheading-bg-position: \"center bottom\"\nheading-bg-repeat: \"repeat\"\nheading-bg-text: \"#fff\"\n\n\n\n\n  heading-bg\n  Background image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with site.file.\n  heading-bg-local\n  To avoid relative URL prefixed by site.file, you can set this option to true to prefix it with amsf_user_assets, then you can store your images in _app/assets/.\n  heading-bg-color\n  Background color, recommend setting its value matches your image color tone.\n  heading-bg-size\n  Background size, default value is cover.\n  heading-bg-position\n  Background position, default value is center center.\n  heading-bg-repeat\n  Background repeat, default value is no-repeat.\n  heading-bg-text\n  Text color in heading, set it based on your background image.\n\n\n\n  Heading image copyright info:\n© 士郎正宗・Production I.G／講談社・「攻殻機動隊」製作委員会\n\n","excerpt":"This is an example of custom heading background. You can simply add the following setting to your post front-matter field:\n\n","languages":null,"categories":["note"],"tags":["curtana"]},{"title":"GitHub Pages Setup Guide","permalink":"https://sparanoid.com/github-pages-setup.html","link":"https://sparanoid.com/github-pages-setup.html","date":"2014-01-01T00:00:00-08:00","modified":"2017-12-15T03:45:29-08:00","author":{"name":"Neil Toledo","url":"https://nnt1054.github.io","email":"ntoledo@berkeley.edu"},"content":"The Problem\n\nUnfortunately this project doesn’t work with GitHub Pages or GitHub Pages for projects. There’re some factors that prevent it from generating pages:\n\n\n  Many features Almace Scaffolding provides like live reloading, Less support, inline SVG, and HTML minification are implemented using Grunt.js, it’s not supported by GitHub Pages.\n  Almace Scaffolding uses the latest pre-release Jekyll, so not all features are supported by GitHub Pages renderers.\n  GItHub Pages build server overwrites the source settings. This prevent it generating pages from current file structure.\n\n\nThe Solution\n\nI know this can be tricky and more verbose than uploading your Jekyll site directly to your repository. However GitHub Pages support static HTML pages, a workaround solution for using Almace Scaffolding on GitHub Pages is treating your Jekyll site as static pages:\n\n\n  Build your site locally (grunt build).\n  Upload Jekyll generated static files to your username.github.io repository.\n\n\nIf you’d like to keep all things under Git control, you can try the following file structure:\n\n├── _amsf/ (Almace Scaffolding source code)\n├── *.html (Jekyll-generated static pages)\n└── README.md (your own readme)\n\n\n\nYou can see this live demo how to make them friends.\n","excerpt":"The Problem\n\n","languages":null,"categories":["note"],"tags":["deployment"]}]